<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--映射文件的命名空间（namespace） 需要与 mapper接口的全类名 保持一致-->
<mapper namespace="community.mapper.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <!--映射文件中编写SQL的标签的id属性 需要与 接口中方法的方法名 保持一致-->
    <!-- *******************************增***************************************   -->
    <!--  -->
    <insert id="insertMessage" parameterType="Message" keyProperty="id" useGeneratedKeys="true">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <!-- ********************************删**************************************   -->
    <!--  -->


    <!-- *********************************改*************************************   -->
    <!--  -->
    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- ********************************查**************************************   -->
    <select id="selectConversations" resultType="Message">
        -- 最终查询结果为查出【当前用户】的会话的所有最新私信。并降序排序
        select <include refid="selectFields"></include>
        from message
        where id in (
            -- 实际上，每个会话中的id最大值（或是createTime最大值），就代表着最新的消息
            -- 此子查询即查出【当前用户】的所有会话中 最新私信的id
            select max(id) from message
            where status != 2
            and from_id != 1
            -- 当前用户userId可能是发信人，也可能是收信人！（要显示当前用户的会话）
            and (from_id = #{userId} or to_id = #{userId})
            -- 分组，实际上共14组会话
            group by conversation_id
        )
        order by id desc
    </select>

    <select id="selectConversationCount" resultType="int">
        select count(m.maxid) from (
            -- 实际上，每个会话中的id最大值（或是createTime最大值），就代表着最新的消息
            -- 此子查询即查出【当前用户】的所有会话中 最新私信的id
            select max(id) as maxid from message
            where status != 2
            and from_id != 1
            -- 当前用户userId可能是发信人，也可能是收信人！（要显示当前用户的会话）
            and (from_id = #{userId} or to_id = #{userId})
            -- 分组，实际上共14组会话
            group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>


    <select id="selectLatestNotice" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
            select max(id) from message
            where status != 2
            and from_id = 1
            and to_id = #{userId}
            and conversation_id = #{topic}
        )
    </select>

    <select id="selectNoticeCount" resultType="int">
        select count(id) from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
    </select>

    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id) from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <select id="selectNotices" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
    </select>
</mapper>